@startuml

participant CJsonPreprocessor
participant CString

CJsonPreprocessor -> CJsonPreprocessor: __processImportFiles(input_data: dict) -> dict
activate CJsonPreprocessor

loop key, value in input_data
alt "[import]" found in key
    CJsonPreprocessor -> CString: CString.NormalizePath(value, sReferencePathAbs)
    activate CString
    CString --> CJsonPreprocessor: Abs path of imported file

    alt Check for cyclic import
        CJsonPreprocessor -> CJsonPreprocessor: Check cyclic import
    end

    CJsonPreprocessor -> CJsonPreprocessor: jsonLoad(abs_path_file)
    loop key, value in imported file
    CJsonPreprocessor -> CJsonPreprocessor: Update keys, values from imported file
    end
else "[import]" not found, check duplicated key
    loop key, value current dict objectend
        alt Key already exist
            CJsonPreprocessor -> CJsonPreprocessor: Created or append a list with special element \
            (CNameMangling.DUPLICATEDKEY_01.value) at index 0.
            CJsonPreprocessor -> CJsonPreprocessor: Replace the value of duplicated key by the list of values.
        end
    CJsonPreprocessor -> CJsonPreprocessor: Process key value
    end
end

end

CJsonPreprocessor --> CJsonPreprocessor: Return out_dict

deactivate CString
deactivate CJsonPreprocessor

@enduml